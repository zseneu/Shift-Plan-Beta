<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2012 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */

/**
 * Product media data template
 *
 * @see Mage_Catalog_Block_Product_View_Media
 */
?>

<?php


echo $this->getChildHtml('tallblock');

$product = $this->getProduct();
$helper  = $this->helper('catalog/output');

// Get the base image path
$baseImageFile = ($product->getImage() != 'no_selection' and $product->getImage()) ? $product->getImage() : false;

$galleryImages = array();

// Process the gallery images
foreach ($this->getGalleryImages() as $image) {
    if ($baseImageFile and $image->getFile() === $baseImageFile) { 
        //only add images that aren't the baseImage
        continue;
    }

    $galleryImages[] = $image;
}

$baseImageSize = array(
    'x' => NULL,
    'y' => 568,
);

$galleryImageSize = array(
    'x' => 95,
    'y' => 60,
);

$zoomSize = array(
    'x' => NULL,
    'y' => 568,
);

$index = 0;

?>

<?php
$_product = $this->getProduct();
$_helper = $this->helper('catalog/output');
?>
<?php if ($_product->getImage() != 'no_selection' && $_product->getImage()): ?>
    <div class="product-image product-image-zoom">
        <?php
        $_img = '<img id="image" src="'.$this->helper('catalog/image')->init($_product, 'image').'"  alt="'.$this->htmlEscape($this->getImageLabel()).'" title="'.$this->htmlEscape($this->getImageLabel()).'" />';
        echo $_helper->productAttribute($_product, $_img, 'image');
        ?>
    </div>
<?php else: ?>
    <!-- <div class="product-image">
        <?php
        $_img = '<img src="'.$this->helper('catalog/image')->init($_product, 'image')->resize(265).'"  alt="'.$this->htmlEscape($this->getImageLabel()).'" title="'.$this->htmlEscape($this->getImageLabel()).'" />';
        echo $_helper->productAttribute($_product, $_img, 'image');
        ?>
    </div> -->
<?php endif; ?>
<?php if (count($this->getGalleryImages()) > 0): ?>
    <!-- <div class="more-views">
        <h5><?php echo $this->__('More Views') ?></h5>
        <ul class="clearing-thumbs" data-clearing>
            <?php foreach ($this->getGalleryImages() as $_image): ?>
                <li>
                    <a href="<?php echo $this->helper('catalog/image')->init($this->getProduct(), 'thumbnail', $_image->getFile())->resize(568); ?>" title="<?php echo $this->htmlEscape($_image->getLabel()) ?>" class="gallery-th">
                        <img src="<?php echo $this->helper('catalog/image')->init($this->getProduct(), 'thumbnail', $_image->getFile())->resize(56); ?>" class="" width="56" height="56" alt="<?php echo $this->htmlEscape($_image->getLabel()) ?>" />
                    </a>
                </li>
            <?php endforeach; ?>
        </ul>
    </div> -->
<?php endif; ?>
<?php //endif ?>
<script>
    jQuery(document).ready(function($) {
        $('.gallery-th').on('click', function(e){
            e.preventDefault();
            var $this = $(this);
            var image = $this.attr('href');
            var title = $this.attr('title');
            var html  = '<img src="'+image+'" title="'+title+'"/>';
            $('.gallery-th').removeClass('active');
            $this.addClass('active');

            $('.product-image-zoom').html(html);

        })
        // $() will work as an alias for jQuery() inside of this function
    });
</script>

